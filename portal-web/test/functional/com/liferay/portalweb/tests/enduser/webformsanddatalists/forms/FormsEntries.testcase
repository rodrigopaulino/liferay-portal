@component-name = "portal-web-forms-and-data-lists"
definition {

	property custom.properties = "minifier.enabled=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Forms";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				portlet = "Forms");

			FormsAdmin.teardownForms();

			Page.tearDownCP();
		}
	}

	@description = "Verify that Entries can be deleted"
	@priority = "5"
	test CanBeDeleted {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text",
			fieldValue = "Test Text");

		FormsAdmin.deleteFormEntry(formEntryValue = "Text");

		FormsAdmin.viewFormTableEntryNotPresent(
			fieldLabel = "Text",
			fieldValue = "Test Text");
	}

	@description = "Verify that Entries can be edited"
	@priority = "5"
	test CanBeEdited {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text",
			fieldValue = "Test Text");

		FormsAdmin.editFormEntry(
			fieldValue = "Test Text Edit",
			formEntryValue = "Text");

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text",
			fieldValue = "Test Text Edit");
	}

	@description = "Verify that a user can navigate to the correct metric by using the list on the right"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeNavigatedUsingNavigationList {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131084 CanBeNavigatedUsingNavigationList pending implementation
	}

	@description = "Verify that Entries can be viewed"
	@priority = "5"
	test CanBeViewed {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdminNavigator.gotoView();

		FormsAdmin.viewTextEntry(
			fieldLabel = "Text",
			fieldName = "Text",
			fieldValue = "Test Text");
	}

	@description = "Verify that Entries Previews display the correct information"
	@priority = "5"
	test DisplayCorrectInfoInPreviews {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Text");

		FormFields.editText(
			fieldName = "label",
			fieldValue = "Text Label");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Numeric");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormFields.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormFields.editText(
			fieldName = "Numeric",
			fieldValue = "5");

		FormPortlet.submitSuccessfully();

		FormPortlet.viewSuccessPage(
			successPageDescription = "Your information was successfully received. Thank you for filling out the form.",
			successPageTitle = "Thank you.");

		Navigator.openSpecificURL(url = "http://localhost:8080");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableHeader(fieldHeader = "Text Label");

		FormsAdmin.viewFormTableHeader(fieldHeader = "Numeric");

		FormsAdmin.viewFormTableBody(fieldBody = "Test Text");

		FormsAdmin.viewFormTableBody(fieldBody = "5");

		FormsAdmin.viewFormTableBody(fieldBody = "Approved");

		FormsAdmin.viewFormTableBody(fieldBody = "Test Test");
	}

	@description = "Verify that the correct number of Entries are displayed"
	@ignore = "Test Stub"
	@priority = "3"
	test DisplayCorrectNumberOfEntries {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131083 DisplayCorrectNumberOfEntries pending implementation
	}

	@description = "Verify that Entries for the Color, Date and Text Fields display a Field List in the Summary Tab"
	@ignore = "Test Stub"
	@priority = "5"
	test DisplayFieldListInSummaryTab {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131078 DisplayFieldListInSummaryTab pending implementation
	}

	@description = "Verify that Entries for the Paragraph, Rich Text, Separator, Image, and Upload Fields do not display any metrics in the Summary Tab"
	@ignore = "Test Stub"
	@priority = "5"
	test DisplayNoMetricsInSummaryTab {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131082 DisplayNoMetricsInSummaryTab pending implementation
	}

	@description = "Verify that Entries for the Numeric Field display a Field List, Average, Maximum Value, Minimum Value, and Sum in the Summary Tab"
	@priority = "5"
	test DisplayStatisticsInSummaryTab {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Numeric",
			formPageNumber = "0");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Numeric",
			fieldValue = "5");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoEditFormByName(formName = "Form 1");

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Numeric",
			fieldValue = "11");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoEditFormByName(formName = "Form 1");

		FormsAdminNavigator.gotoEntries();

		FormViewBuilder.viewSummaryEntryNumeric(
			key_averageValue = "8",
			key_maxValue = "11",
			key_minValue = "5",
			key_sumValue = "16");
	}

	@description = "Verify that with Single Approver Workflow enabled and after the form entry was approved, the entry will have an approved label"
	@ignore = "Test Stub"
	@priority = "5"
	test WorkflowApprovalChangesLabelToApproved {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131203 WorkflowApprovalChangesLabelToApproved pending implementation
	}

	@description = "Verify that with Single Approver Workflow enabled, the Submit button now reads "Submit for Publication""
	@priority = "5"
	test WorkflowChangesSubmitButtonToSubmitForPublication {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.closeSidebar();

		FormsAdminNavigator.gotoSettings();

		Form.configureWorkflow(workflowDefinition = "Single Approver");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		Form.viewSubmitButtonText(key_buttonText = "Submit for Publication");
	}

	@description = "Verify that with Single Approver Workflow enabled and after the user Submit for Publication, the form entry will have a pending label"
	@ignore = "Test Stub"
	@priority = "5"
	test WorkflowSubmissionChangesLabelToPending {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131202 WorkflowSubmissionChangesLabelToPending pending implementation
	}

}