@component-name = "portal-web-forms-and-data-lists"
definition {

	property custom.properties = "minifier.enabled=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Forms";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				portlet = "Forms");

			FormsAdmin.teardownForms();

			Page.tearDownCP();
		}
	}

	@description = "Verify that a Form with required fields can be partially filled out and submitted"
	@priority = "5"
	test CanBePartiallyFilledWithRequiredFields {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Text");

		FormFields.enableSwitcher(fieldName = "Required Field");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Numeric");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormFields.viewRequiredAsteriskDataField(fieldFieldLabel = "Text");

		FormFields.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormPortlet.submitSuccessfully();

		FormPortlet.viewSuccessPage(
			successPageDescription = "Your information was successfully received. Thank you for filling out the form.",
			successPageTitle = "Thank you.");
	}

	@description = "Verify that a Form can be submitted"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeSubmitted {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131018 CanBeSubmitted pending implementation

	}

	@description = "Verify that a Form can be submitted from the Forms Widget"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeSubmittedFromWidget {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131019 CanBeSubmittedFromWidget pending implementation
	}

	@description = "Verify that a Form that is partially filled out can be submitted"
	@priority = "5"
	test CanBeSubmittedWhilePartiallyFilled {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Numeric");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormViewBuilder.editText(
			fieldName = "Numeric",
			fieldValue = "");

		FormPortlet.submitSuccessfully();
	}

	@description = "Verify that a Form with multiple pages can be submitted"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeSubmittedWithMultiplePages {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131151 CanBeSubmittedWithMultiplePages pending implementation
	}

	@description = "Verify that a Form can redirect a user after being submitted"
	@ignore = "Test Stub"
	@priority = "5"
	test CanRedirectUserAfterFormSubmission {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131026 CanRedirectUserAfterFormSubmission pending implementation
	}

	@description = "Verify that a Form can require user authentication before being accessed"
	@ignore = "Test Stub"
	@priority = "5"
	test CanRequireUserAuthentication {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131024 CanRequireUserAuthentication pending implementation
	}

	@description = "Verify that a Form's Success Page can be restored"
	@ignore = "Test Stub"
	@priority = "5"
	test DefaultSuccessPageCanBeRestored {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131035 DefaultSuccessPageCanBeRestored pending implementation
	}

	@description = "Verify that the Submit button's default value is restored if the Submit Button Label is left blank"
	@ignore = "Test Stub"
	@priority = "4"
	test SubmitButtonRestoredToDefaultIfLeftBlank {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131032 SubmitButtonRestoredToDefaultIfLeftBlank pending implementation
	}

	@description = "Verify that a Form's Submit button's text can be customized"
	@ignore = "Test Stub"
	@priority = "5"
	test SubmitButtonTextCanBeCustomized {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131028 SubmitButtonTextCanBeCustomized pending implementation
	}

	@description = "Verify that a Form's Submit button's text can be customized multiple times"
	@ignore = "Test Stub"
	@priority = "3"
	test SubmitButtonTextCanBeCustomizedMultipleTimes {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131031 SubmitButtonTextCanBeCustomizedMultipleTimes pending implementation
	}

	@description = "Verify that a Form's Submit button's text can be customized with numbers"
	@ignore = "Test Stub"
	@priority = "3"
	test SubmitButtonTextCanBeCustomizedWithNumbers {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131030 SubmitButtonTextCanBeCustomizedWithNumbers pending implementation
	}

	@description = "Verify that a Form's Submit button's text can be customized with special characters"
	@ignore = "Test Stub"
	@priority = "3"
	test SubmitButtonTextCanBeCustomizedWithSpecialCharacters {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131029 SubmitButtonTextCanBeCustomizedWithSpecialCharacters pending implementation
	}

	@description = "Verify that a Form's Success Page can be deleted"
	@ignore = "Test Stub"
	@priority = "5"
	test SuccessPageCanBeDeleted {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131034 SuccessPageCanBeDeleted pending implementation
	}

}