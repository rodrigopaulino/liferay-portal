@component-name = "portal-web-forms-and-data-lists"
definition {

	property custom.properties = "minifier.enabled=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Forms";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				portlet = "Forms");

			FormsAdmin.teardownForms();

			Page.tearDownCP();
		}
	}

	@description = "Verify that a Numeric Field can be created"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeCreated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132829 CanBeCreated pending implementation

	}

	@description = "Verify that a Numeric Field can be deleted"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeDeleted {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132831 CanBeDeleted pending implementation
	}

	@description = "Verify that a Numeric Field can be duplicated"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeDuplicated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132835 CanBeDuplicated pending implementation
	}

	@description = "Verify that a Numeric Field can be edited"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeEdited {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132830 CanBeEdited pending implementation
	}

	@description = "Verify that a Numeric Field can be required"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeRequired {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132832 CanBeRequired pending implementation
	}

	@description = "Verify that a Numeric Field can be set to Integer or Decimal"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeSetToIntegerOrDecimal {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132834 CanBeSetToIntegerOrDecimal pending implementation
	}

	@description = "Verify that a Numeric Field can be set to repeatable"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeSetToRepeatable {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132836 CanBeSetToRepeatable pending implementation
	}

	@description = "Verify that a Form can be submitted with the Numeric Field"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeSubmitted {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132844 CanBeSubmitted pending implementation
	}

	@description = "Verify that the "Is Equal To" option can be used to validate a Numeric Field"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeValidatedUsingIsEqualTo {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132849 CanBeValidatedUsingIsEqualTo pending implementation
	}

	@description = "Verify that the "Is Greater Than" option can be used to validate a Numeric Field"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeValidatedUsingIsGreaterThan {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132851 CanBeValidatedUsingIsGreaterThan pending implementation
	}

	@description = "Verify that the "Is Greater Than Or Equal To" option can be used to validate a Numeric Field"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeValidatedUsingIsGreaterThanOrEqualTo {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132850 CanBeValidatedUsingIsGreaterThanOrEqualTo pending implementation
	}

	@description = "Verify that the "Is Less Than" option can be used to validate a Numeric Field"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeValidatedUsingIsLessThan {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132854 CanBeValidatedUsingIsLessThan pending implementation
	}

	@description = "Verify that the "Is Less Than Or Equal To" option can be used to validate a Numeric Field"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeValidatedUsingIsLessThanOrEqualTo {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132853 CanBeValidatedUsingIsLessThanOrEqualTo pending implementation
	}

	@description = "Verify that the "Is Not Equal To" option can be used to validate a Numeric Field"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeValidatedUsingIsNotEqualTo {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132852 CanBeValidatedUsingIsNotEqualTo pending implementation
	}

	@description = "Verify that changes to a Field can be canceled"
	@ignore = "Test Stub"
	@priority = "4"
	test ChangesCanBeCanceled {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132839 ChangesCanBeCanceled pending implementation
	}

	@description = "Verify that a help text can be added"
	@ignore = "Test Stub"
	@priority = "5"
	test HelpTextCanBeAdded {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132842 HelpTextCanBeAdded pending implementation
	}

	@description = "Verify that the Field Label can be edited"
	@ignore = "Test Stub"
	@priority = "5"
	test LabelCanBeEdited {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132840 LabelCanBeEdited pending implementation
	}

	@description = "Verify that the Field Label can be hidden"
	@ignore = "Test Stub"
	@priority = "5"
	test LabelCanBeHidden {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132841 LabelCanBeHidden pending implementation
	}

	@description = "Verify that a Numeric Field only accepts numbers"
	@ignore = "Test Stub"
	@priority = "5"
	test OnlyAcceptsNumbers {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132833 OnlyAcceptsNumbers pending implementation
	}

	@description = "Verify that a Placeholder Text can be set"
	@ignore = "Test Stub"
	@priority = "5"
	test PlaceholderTextCanBeSet {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132846 PlaceholderTextCanBeSet pending implementation
	}

	@description = "Verify that a Predefined Value can be set"
	@ignore = "Test Stub"
	@priority = "5"
	test PredefinedValueCanBeSet {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132845 PredefinedValueCanBeSet pending implementation
	}

	@description = "Verify that Predefined Value has higher priority than Placeholder Text for the Numeric Field"
	@ignore = "Test Stub"
	@priority = "4"
	test PredefinedValueHasHigherPriorityThanPlaceholderText {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132847 PredefinedValueHasHigherPriorityThanPlaceholderText pending implementation
	}

	@description = "Verify that when erasing the Predefined Value in the Numeric Field it will be replaced by the Placeholder Text"
	@ignore = "Test Stub"
	@priority = "4"
	test PredefinedValueIsReplacedByPlaceholderText {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132848 PredefinedValueIsReplacedByPlaceholderText pending implementation
	}

	@description = "Verify that the Field Reference can be Edited"
	@ignore = "Test Stub"
	@priority = "5"
	test ReferenceCanBeEdited {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132843 ReferenceCanBeEdited pending implementation
	}

	@description = "Verify that the Field Type can be changed"
	@ignore = "Test Stub"
	@priority = "5"
	test TypeCanBeChanged {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132837 TypeCanBeChanged pending implementation
	}

	@description = "Verify that Validation options are reset after changing the Field Type from a Numeric Field to Text Field"
	@ignore = "Test Stub"
	@priority = "4"
	test ValidationIsResetAfterChangingFieldType {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-132838 ValidationIsResetAfterChangingFieldType pending implementation
	}

}