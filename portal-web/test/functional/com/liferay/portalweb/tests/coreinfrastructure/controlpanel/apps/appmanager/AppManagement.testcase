@component-name = "portal-user-management-and-portal-configuration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "App Management";

	setUp {
		User.firstLoginPG();
	}

	tearDown {
		Page.tearDownCP();
	}

	@description = "This test asserts that apps in App Management do not display in non default instances"
	@priority = "4"
	test AppManagementAppsAreNotInDefaultInstances {
		PortalInstances.openVirtualInstancesAdmin();

		PortalInstances.addCP(
			mailDomain = "www.able.com",
			virtualHost = "www.able.com",
			webId = "www.able.com");

		User.firstLoginPG(
			password = "test",
			userEmailAddress = "test@www.able.com",
			virtualHostsURL = "http://www.able.com:8080");

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		for (var portlet : list "App Manager,License Manager") {
			Portlet.viewNoPortletsPresentCP(
				category = "System",
				panel = "Control Panel",
				portlet = "${portlet}");
		}

		for (var portlet : list "Purchased,Store") {
			Portlet.viewNoPortletsPresentCP(
				category = "Marketplace",
				panel = "Control Panel",
				portlet = "${portlet}");
		}
	}

	@priority = "3"
	test AppManagerFilterAndOrder {
		property test.name.skip.portal.instance = "AppManagement#AppManagerFilterAndOrder";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		ManagementBar.setFilterAndOrder(orderBy = "Title");

		Click(locator1 = "ManagementBar#ORDER_ICON_GENERIC");

		LexiconEntry.viewEntryName(rowEntry = "Liferay Users Admin");

		Click(locator1 = "ManagementBar#ORDER_ICON_GENERIC");

		ManagementBar.setFilterAndOrder(filterBy = "Communication");

		LexiconEntry.viewEntryName(rowEntry = "Liferay Blogs");

		ManagementBar.setFilterAndOrder(filterBy = "Utility");

		LexiconEntry.viewEntryName(rowEntry = "Liferay Account");
	}

	@priority = "3"
	test AppManagerLocalization {
		property test.name.skip.portal.instance = "AppManagement#AppManagerLocalization";

		PortalSettings.gotoConfiguration(
			configurationCategory = "Localization",
			configurationName = "Language",
			configurationScope = "Virtual Instance Scope");

		PortalSettings.configureCurrentLanguagesCP(
			currentPortalLanguages = "Spanish (Spain)",
			defaultPortalLanguage = "Spanish (Spain)");

		ApplicationsMenu.gotoPortlet(
			category = "Sistema",
			panel = "Panel de control",
			portlet = "Gestor de aplicaciones");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Gestor de aplicaciones");
	}

	@description = "This is a test for LPS-102506."
	@ignore = "true"
	@priority = "3"
	test AppsCanBeActivatedAfterUninstalling {
		// TODO LPS-102506 Unable to activate an app (lpkg) after uninstalling it via the app manager, waiting for fix

	}

	@priority = "4"
	test AppShouldNotBeNestedWithinItself {
		property test.name.skip.portal.instance = "AppManagement#AppShouldNotBeNestedWithinItself";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		var key_appName = "Independent Modules";

		AssertClick(
			locator1 = "AppManager#APP_NAME",
			value1 = "Independent Modules");

		AssertElementNotPresent(locator1 = "AppManager#APP_NAME");
	}

	@description = "This ensures that the Adaptive Media app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateAdaptiveMedia {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateAdaptiveMedia";
		property testray.main.component.name = "Adaptive Media";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Adaptive Media",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Adaptive Media");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Adaptive Media",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Adaptive Media");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Adaptive Media",
			appStatus = "Active");
	}

	@description = "This ensures that the Asset Libraries app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateAssetLibraries {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateAssetLibraries";
		property testray.main.component.name = "Depot";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Asset Libraries",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Asset Libraries");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Asset Libraries",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Asset Libraries");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Asset Libraries",
			appStatus = "Active");
	}

	@description = "This ensures that the Blogs app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateBlogs {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateBlogs";
		property testray.main.component.name = "Blogs";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Blogs",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Blogs");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Blogs",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Blogs");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Blogs",
			appStatus = "Active");
	}

	@description = "This ensures that the Comment app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateComment {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateComment";
		property testray.main.component.name = "Content Page Review";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Comment",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Comment");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Comment",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Comment");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Comment",
			appStatus = "Active");
	}

	@description = "This ensures that the Document Library Opener app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateDocumentLibraryOpener {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateDocumentLibraryOpener";
		property testray.main.component.name = "Documents Management";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Document Library Opener",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Document Library Opener");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Document Library Opener",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Document Library Opener");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Document Library Opener",
			appStatus = "Active");
	}

	@description = "This ensures that the Knowledge Base app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateKnowledgeBase {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateKnowledgeBase";
		property testray.main.component.name = "Knowledge Base";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Knowledge Base",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Knowledge Base");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Knowledge Base",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Knowledge Base");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Knowledge Base",
			appStatus = "Active");
	}

	@description = "This ensures that the Message Boards app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateMessageBoards {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateMessageBoards";
		property testray.main.component.name = "Message Boards";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Message Boards",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Message Boards");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Message Boards",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Message Boards");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Message Boards",
			appStatus = "Active");
	}

	@description = "This ensures that the Notifications app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateNotifications {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateNotifications";
		property testray.main.component.name = "Notifications";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Notifications",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Notifications");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Notifications",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Notifications");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Notifications",
			appStatus = "Active");
	}

	@description = "This ensures that the Questions app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateQuestions {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateQuestions";
		property testray.main.component.name = "Questions";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Questions",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Questions");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Questions",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Questions");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Questions",
			appStatus = "Active");
	}

	@description = "This ensures that the Ratings app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateRatings {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateRatings";
		property testray.main.component.name = "Ratings";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Ratings",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Ratings");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Ratings",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Ratings");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Ratings",
			appStatus = "Active");
	}

	@description = "This ensures that the Sharing app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateSharing {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateSharing";
		property testray.main.component.name = "Asset Sharing";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Sharing",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Sharing");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Sharing",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Sharing");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Sharing",
			appStatus = "Active");
	}

	@description = "This ensures that the Translation app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateTranslation {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateTranslation";
		property testray.main.component.name = "Translations Management";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Translation",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Translation");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Translation",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Translation");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Translation",
			appStatus = "Active");
	}

	@description = "This ensures that the Wiki app in the app manager can be deactivated and reactivated."
	@priority = "5"
	test DeactivateAndActivateWiki {
		property test.name.skip.portal.instance = "AppManagement#DeactivateAndActivateWiki";
		property testray.main.component.name = "Wiki";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.viewApp(
			appName = "Wiki",
			appStatus = "Active");

		AppManager.deactivateApp(appName = "Wiki");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Wiki",
			appStatus = "Resolved");

		AppManager.activateApp(appName = "Wiki");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		AppManager.viewApp(
			appName = "Wiki",
			appStatus = "Active");
	}

	@priority = "5"
	test InstallViaUploadIsSuccessful {
		property test.name.skip.portal.instance = "AppManagement#InstallViaUploadIsSuccessful";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		var appName = "test-app-portlet";

		AppManager.uploadApp(
			appName = "${appName}",
			warFileName = "${appName}-7.2.0.war");

		AppManager.viewApp(
			appName = "${appName}",
			appStatus = "Active");
	}

	@description = "This test attempts to install an app by uploading a file that is invalid. Error message is asserted."
	@priority = "3"
	test InvalidFileShouldNotBeUploaded {
		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		var key_appName = "title.zip";

		Click(locator1 = "Portlet#OPTIONS_ICON");

		MenuItem.click(menuItem = "Upload");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertElementPresent(locator1 = "TextInput#FILE");

		UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
			locator1 = "TextInput#FILE",
			value1 = "title.zip");

		Button.clickInstall();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_1",
			value1 = "Error:Please upload a file with a valid extension (JAR, LPKG, or WAR File).");
	}

	@priority = "5"
	test UninstallAppIsSuccessful {
		property test.name.skip.portal.instance = "AppManagement#UninstallAppIsSuccessful";

		var appName = "test-app-portlet";

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "App Manager");

		AppManager.uploadApp(
			appName = "${appName}",
			warFileName = "${appName}-7.2.0.war");

		AppManager.viewApp(
			appName = "${appName}",
			appStatus = "Active");

		AppManager.uninstallApp(appName = "${appName}");

		Search.searchCP(searchTerm = "${appName}");

		AssertElementNotPresent(
			key_appName = "${appName}",
			locator1 = "AppManager#APP_NAME");

		AssertConsoleTextPresent(value1 = "STOPPED ${appName}");
	}

	@description = "This is a use case for LPS-99031."
	@priority = "5"
	test ViewLicenseManager {
		property test.name.skip.portal.instance = "AppManagement#ViewLicenseManager";

		ApplicationsMenu.gotoPortlet(
			category = "Marketplace",
			panel = "Control Panel",
			portlet = "License Manager");

		Pause(locator1 = "3000");

		LicenseManager.viewDefaultCP(tableTexts = "Server Info,Host Name,IP Addresses,Licenses Registered,Owner,Start Date");

		AssertElementNotPresent(locator1 = "Portlet#HEADER_DUPLICATE");
	}

}