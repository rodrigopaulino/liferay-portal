@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Commerce";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			CommerceConfiguration.commerceAdminTearDown();

			CommerceConfiguration.commerceInitializersTearDown();
		}
	}

	@description = "This is a test for COMMERCE-6231. Discount lifecycle"
	@ignore = "true"
	@priority = "3"
	test AddEditAndDeleteDiscountEntry {
		property portal.acceptance = "false";

		// TODO COMMERCE-6231 AddEditAndDeleteDiscountEntry Pending Implementation

	}

	@description = "This is a test for COMMERCE-6232. Discount Rules lifecycle"
	@ignore = "true"
	@priority = "3"
	test AddEditAndRemoveDiscountRule {
		property portal.acceptance = "false";

		// TODO COMMERCE-6232 AddEditAndRemoveDiscountRule Pending Implementation
	}

	test AssertDiscountIsAppliedToChannel {
		property portal.acceptance = "true";
		property portal.upstream = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceAccelerators.initializeNewSiteViaAccelerator(
			siteName = "Minium 2",
			siteTemplateName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		AssertElementPresent(
			key_entryName = "Minium Portal",
			locator1 = "CommerceNavigation#ENTRY_NAME");

		AssertElementPresent(
			key_entryName = "Minium 2 Portal",
			locator1 = "CommerceNavigation#ENTRY_NAME");

		CommerceNavigator.gotoPortlet(
			category = "Pricing",
			portlet = "Discounts");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewDiscountsEntry(
			channelsEligibility = "Minium Portal",
			discountAmount = "25",
			discountName = "Test Discount",
			discountTarget = "Products",
			discountType = "Percentage");

		CommerceRelations.assignSingleRelationToProductsEntry(
			entryName = "U-Joint",
			title = "Add Products");

		Button.clickPublish();

		CommerceEntry.gotoMenuTab(menuTab = "Eligibility");

		CommerceEntry.setEntryEligibility(channelsEligibility = "Minium Portal");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		CommerceAcceleratorsInitializer.gotoMiniumProductDetailsPage(productName = "U-Joint");

		CommerceAcceleratorsInitializer.viewDiscountedProductDetailsPage(
			discountPercentage = "25",
			productDiscountedPrice = "18.00",
			productListPrice = "24.00");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/minium-2");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		CommerceAcceleratorsInitializer.gotoMiniumProductDetailsPage(productName = "U-Joint");

		AssertElementNotPresent(locator1 = "CommerceAccelerators#PRODUCT_DETAILS_DISCOUNT");

		AssertElementNotPresent(locator1 = "CommerceAccelerators#PRODUCT_DETAILS_NET_PRICE");

		AssertTextEquals.assertPartialText(
			locator1 = "CommerceAccelerators#PRODUCT_DETAILS_LIST_PRICE",
			value1 = "24.00");
	}

	test CreateNewDiscount {
		property portal.acceptance = "true";
		property portal.upstream = "true";
		property test.name.skip.portal.instance = "CPCommerceDiscounts#CreateNewDiscount";

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Channels");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewChannelsEntry(
			channelCurrency = "US Dollar",
			channelName = "Test Channel",
			channelType = "Site",
			siteName = "Guest");

		CommerceNavigator.gotoPortlet(
			category = "Pricing",
			portlet = "Discounts");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewDiscountsEntry(
			discountAmount = "15",
			discountName = "Test Discount",
			discountTarget = "Products",
			discountType = "Percentage",
			maximumDiscountAmount = "10");

		CommerceEntry.gotoMenuTab(menuTab = "Eligibility");

		CommerceEntry.setEntryEligibility(channelsEligibility = "Test Channel");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		CommerceNavigator.gotoPortlet(
			category = "Pricing",
			portlet = "Discounts");

		CommerceNavigator.gotoEntry(entryName = "Test Discount");

		CommerceEntry.viewDiscountsEntry(
			channelsEligibility = "Test Channel",
			discountAmount = "15.00",
			discountName = "Test Discount",
			discountTarget = "Products",
			discountType = "Percentage",
			maximumDiscountAmount = "10.00");
	}

	@description = "This is a test for COMMERCE-6230. Discount coupon code limitations"
	@ignore = "true"
	@priority = "3"
	test LimitCouponCodeUsability {
		property portal.acceptance = "false";

		// TODO COMMERCE-6230 LimitCouponCodeUsability Pending Implementation
	}

	@description = "This is a test for COMMERCE-6229. Discount coupon code validators"
	@ignore = "true"
	@priority = "3"
	test ViewCouponCodeNotAppliedToNotQualifiedAccount {
		property portal.acceptance = "false";

		// TODO COMMERCE-6229 ViewCouponCodeNotAppliedToNotQualifiedAccount Pending Implementation
	}

	@description = "This is a test for COMMERCE-6233. Discount expiration"
	@ignore = "true"
	@priority = "3"
	test ViewExpiredDiscountEntry {
		property portal.acceptance = "false";

		// TODO COMMERCE-6233 ViewExpiredDiscountEntry Pending Implementation
	}

}