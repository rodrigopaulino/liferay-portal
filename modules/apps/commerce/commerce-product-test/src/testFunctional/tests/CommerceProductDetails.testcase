@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Commerce";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			CommerceConfiguration.commerceAdminTearDown();

			CommerceConfiguration.commerceInitializersTearDown();
		}
	}

	@description = "COMMERCE-6356. As a buyer, I want to be able to select the quantity of a product and add it to cart from Product details"
	@priority = "3"
	test AddProductToCartFromProductDetails {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CommerceProductDetails#AddProductToCartFromProductDetails";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = "2");

		CommerceNavigator.gotoMiniCart();

		AssertElementPresent(
			key_cartItemSKU = "MIN55861",
			locator1 = "CommerceAccelerators#MINI_CART_ITEM_NAME",
			value1 = "U-Joint");
	}

	@description = "COMMERCE-6354. As a buyer, I want to be able to add a product to wish list from Product Details and if I refresh the page, I want to be able to see that the product is already added to wishlist"
	@ignore = "true"
	@priority = "3"
	test AddProductToWishListFromProductDetails {
		property portal.acceptance = "false";

		// TODO COMMERCE-6354 AddProductToWishListFromProductDetails pending implementation

	}

	@description = "COMMERCE-6359. As a buyer, I want to be able to select only the allowed quantities of a product in Product Details, if set"
	@priority = "3"
	test AssertOnlyAllowedQuantitiesAreSelectableInProductDetails {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CommerceProductDetails#AssertOnlyAllowedQuantitiesAreSelectableInProductDetails";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.searchEntry(entryName = "U-Joint");

		CommerceNavigator.gotoEntry(entryName = "U-Joint");

		CommerceEntry.gotoMenuTab(menuTab = "Configuration");

		Type(
			key_text = "Allowed Order Quantities",
			locator1 = "TextInput#ANY",
			value1 = "1 4 5 7 11");

		Button.clickPublish();

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Commerce Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		var product = "U-Joint";

		Click(
			key_productName = "${product}",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");

		for (var quantity : list "1,4,5,7,11") {
			AssertElementPresent(
				key_optionValue = "${quantity}",
				key_productName = "${product}",
				locator1 = "CommerceFrontStore#PRODUCT_DETAILS_QUANTITY_OPTION");
		}
	}

	@description = "COMMERCE-6363. As a buyer, I want to be able to select the quantity of a product in Product Details by multiple value, if set"
	@priority = "3"
	test AssertOnlyMultipleValuesAreSelectableQuantitiesInProductDetails {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CommerceProductDetails#AssertOnlyMultipleValuesAreSelectableQuantitiesInProductDetails";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.searchEntry(entryName = "U-Joint");

		CommerceNavigator.gotoEntry(entryName = "U-Joint");

		CommerceEntry.gotoMenuTab(menuTab = "Configuration");

		Type(
			key_text = "Multiple Order Quantity",
			locator1 = "TextInput#ANY",
			value1 = "3");

		Button.clickPublish();

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Commerce Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		var product = "U-Joint";

		Click(
			key_productName = "${product}",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");

		for (var quantity : list "1,3,4,6,9,12,15,18") {
			Type(
				key_productName = "${product}",
				locator1 = "CommerceFrontStore#PRODUCT_DETAILS_QUANTITY_INPUT",
				value1 = "${quantity}");

			if ("${quantity}" == "1" || "${quantity}" == "4") {
				AssertTextEquals(
					key_productName = "${product}",
					locator1 = "CommerceFrontStore#PRODUCT_DETAILS_QUANTITY_INPUT",
					value1 = "3");
			}
			else {
				AssertTextEquals(
					key_productName = "${product}",
					locator1 = "CommerceFrontStore#PRODUCT_DETAILS_QUANTITY_INPUT",
					value1 = "${quantity}");
			}
		}
	}

	@description = "COMMERCE-6369. As a buyer, I want to be able to add a product to the cart in Product Details regardless of the availability, if back ordererabilty of that product is enabled"
	@ignore = "true"
	@priority = "3"
	test AssertProductCanBeAddedToCartFromProductDetailsIfBackOrderIsEnabled {
		property portal.acceptance = "false";

		// TODO COMMERCE-6369 AssertProductCanBeAddedToCartFromProductDetailsIfBackOrderIsEnabled pending implementation
	}

	@description = "COMMERCE-6367. As a buyer, I don't want to be able to add a product to the cart in Product Details if the product is not purchasable"
	@priority = "3"
	test AssertProductCannotBeAddedToCartFromProductDetailsIfProductIsNotPurchasable {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CommerceProductDetails#AssertProductCannotBeAddedToCartFromProductDetailsIfProductIsNotPurchasable";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.searchEntry(entryName = "U-Joint");

		CommerceNavigator.gotoEntry(entryName = "U-Joint");

		CommerceEntry.gotoMenuTab(menuTab = "SKUs");

		CommerceNavigator.gotoEntry(entryName = "MIN55861");

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Uncheck.uncheckToggleSwitch(
			key_checkSetupName = "Purchasable",
			locator1 = "ToggleSwitch#SHOW_SPECIFIC_TOGGLE_SWITCH");

		Button.clickPublish();

		SelectFrameTop(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test Test",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		CommerceAcceleratorsInitializer.gotoMiniumProductDetailsPage(productName = "U-Joint");

		AssertElementPresent(
			key_productName = "U-Joint",
			locator1 = "CommerceAccelerators#ADD_TO_CART_BUTTON_PRODUCT_DETAILS_PAGE_DISABLED");
	}

	@description = "COMMERCE-6362. As a buyer, I want to be able to select the quantity of a product in Product Details up to a maximum quantity, if set"
	@priority = "3"
	test AssertQuantityInProductDetailsCanBeSelectedUpToAMaximumQuantitySet {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CommerceProductDetails#AssertQuantityInProductDetailsCanBeSelectedUpToAMaximumQuantitySet";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceProducts.searchProduct(search = "U-Joint");

		CommerceNavigator.gotoEntry(entryName = "U-Joint");

		CommerceEntry.gotoMenuTab(menuTab = "Configuration");

		Type(
			key_fieldLabel = "Maximum Order Quantity",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "4");

		Button.clickPublish();

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Commerce Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		Click(
			key_productName = "U-Joint",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");

		AssertElementPresent(
			key_value = "4",
			locator1 = "CommerceFrontStore#MAX_QUANTITY_SELECTOR_PRODUCT_DETAILS");
	}

	@description = "COMMERCE-6360. As a buyer, I want to be able to select the quantity of a product in Product Details starting from a minimum quantity, if set"
	@priority = "3"
	test AssertSelectableQuantitiesInProductDetailsStartFromMinimumQuantitySet {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CommerceProductDetails#AssertSelectableQuantitiesInProductDetailsStartFromMinimumQuantitySet";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.searchEntry(entryName = "U-Joint");

		CommerceNavigator.gotoEntry(entryName = "U-Joint");

		CommerceEntry.gotoMenuTab(menuTab = "Configuration");

		Type(
			key_text = "Minimum Order Quantity",
			locator1 = "TextInput#ANY",
			value1 = "3");

		Button.clickPublish();

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Commerce Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		var product = "U-Joint";

		Click(
			key_productName = "${product}",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");

		for (var quantity : list "1,2,3,4") {
			Type(
				key_productName = "${product}",
				locator1 = "CommerceFrontStore#PRODUCT_DETAILS_QUANTITY_INPUT",
				value1 = "${quantity}");

			if ("${quantity}" == "1" || "${quantity}" == "2") {
				AssertTextNotEquals(
					key_productName = "${product}",
					locator1 = "CommerceFrontStore#PRODUCT_DETAILS_QUANTITY_INPUT",
					value1 = "${quantity}");
			}
			else {
				AssertTextEquals(
					key_productName = "${product}",
					locator1 = "CommerceFrontStore#PRODUCT_DETAILS_QUANTITY_INPUT",
					value1 = "${quantity}");
			}
		}
	}

	@description = "COMMERCE-6355. As a buyer, I want to be able to remove a product from wish list from Product Details"
	@ignore = "true"
	@priority = "3"
	test RemoveProductFromWishListFromProductDetails {
		property portal.acceptance = "false";

		// TODO COMMERCE-6355 RemoveProductFromWishListFromProductDetails pending implementation
	}

	@description = "COMMERCE-6370. As a buyer, I want to be able to select an option value, and add the product to cart in Product Details"
	@ignore = "true"
	@priority = "3"
	test SelectOptionValueAndAddProductToCart {
		property portal.acceptance = "false";

		// TODO COMMERCE-6370 SelectOptionValueAndAddProductToCart pending implementation
	}

	@description = "COMMERCE-6658. As a buyer, I want to be able to select an option value(Bundled Product) and I want to see product details updating(Price, SKU and Availability)"
	@ignore = "true"
	@priority = "3"
	test SelectOptionValueAndAssertBundledProductDetailsAreUpdated {
		property portal.acceptance = "false";

		// TODO COMMERCE-6658 SelectOptionValueAndAssertBundledProductDetailsAreUpdated pending implementation
	}

	@description = "COMMERCE-6371. As a buyer, I want to be able to select an option value(SKU contributor) and I want to see product details updating(Price, SKU and Availability)"
	@ignore = "true"
	@priority = "3"
	test SelectOptionValueAndAssertProductPriceIsUpdated {
		property portal.acceptance = "false";

		// TODO COMMERCE-6371 SelectOptionValueAndAssertProductDetailsAreUpdated pending implementation
	}

	@description = "COMMERCE-6659. I want to be able to use ADT to render Product Details widget and I want to be able to select a Display Template and see it applied to the widget"
	@ignore = "true"
	@priority = "3"
	test UseADTInProductDetailsWidget {
		property portal.acceptance = "false";

		// TODO COMMERCE-6659 UseADTInProductDetailsWidget pending implementation
	}

	@description = "COMMERCE-6660. I want to be able to set a custom renderer for product type different than the default one(Simple/Grouped/Virtual)"
	@ignore = "true"
	@priority = "3"
	test UseCustomRenderersInProductDetails {
		property portal.acceptance = "false";

		// TODO COMMERCE-6660 UseCustomRenderersInProductDetails pending implementation
	}

	@description = "COMMERCE-6364. As a buyer, I want the first selectable quantity of a product in Product Details to be the minimum multiple quantity if Minimum Order Quantity is higher than Multiple Order Quantity"
	@priority = "3"
	test ViewFirstSelectableQuantityInProductDetailsWhenMinimumOrderQuantityIsHigherThanMultipleOrderQuantity {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CommerceProductDetails#ViewFirstSelectableQuantityInProductDetailsWhenMinimumOrderQuantityIsHigherThanMultipleOrderQuantity";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.searchEntry(entryName = "U-Joint");

		CommerceNavigator.gotoEntry(entryName = "U-Joint");

		CommerceEntry.gotoMenuTab(menuTab = "Configuration");

		Type(
			key_text = "Minimum Order Quantity",
			locator1 = "TextInput#ANY",
			value1 = "6");

		Type(
			key_text = "Multiple Order Quantity",
			locator1 = "TextInput#ANY",
			value1 = "5");

		Button.clickPublish();

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Commerce Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		var product = "U-Joint";

		Click(
			key_productName = "${product}",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");

		for (var quantity : list "1,6,10") {
			Type(
				key_productName = "${product}",
				locator1 = "CommerceFrontStore#PRODUCT_DETAILS_QUANTITY_INPUT",
				value1 = "${quantity}");

			AssertTextEquals(
				key_productName = "${product}",
				locator1 = "CommerceFrontStore#PRODUCT_DETAILS_QUANTITY_INPUT",
				value1 = "10");
		}
	}

	@description = "COMMERCE-6366. As a buyer, I want the first selectable quantity of a product in Product Details to be the minimum multiple quantity if Minimum Order Quantity is lower than Multiple Order Quantity"
	@priority = "3"
	test ViewFirstSelectableQuantityInProductDetailsWhenMinimumOrderQuantityIsLowerThanMultipleOrderQuantity {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CommerceProductDetails#ViewFirstSelectableQuantityInProductDetailsWhenMinimumOrderQuantityIsLowerThanMultipleOrderQuantity";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.searchEntry(entryName = "U-Joint");

		CommerceNavigator.gotoEntry(entryName = "U-Joint");

		CommerceEntry.gotoMenuTab(menuTab = "Configuration");

		Type(
			key_text = "Minimum Order Quantity",
			locator1 = "TextInput#ANY",
			value1 = "4");

		Type(
			key_text = "Multiple Order Quantity",
			locator1 = "TextInput#ANY",
			value1 = "5");

		Button.clickPublish();

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Commerce Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		var product = "U-Joint";

		Click(
			key_productName = "${product}",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");

		for (var quantity : list "1,4,5") {
			Type(
				key_productName = "${product}",
				locator1 = "CommerceFrontStore#PRODUCT_DETAILS_QUANTITY_INPUT",
				value1 = "${quantity}");

			AssertTextEquals(
				key_productName = "${product}",
				locator1 = "CommerceFrontStore#PRODUCT_DETAILS_QUANTITY_INPUT",
				value1 = "5");
		}
	}

	@description = "COMMERCE-6358. As a buyer, I want to see the barred list price and a sale price of a product in Product Details, if a promotion is set"
	@priority = "3"
	test ViewProductDetailsPriceWithPromotion {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CommerceProductDetails#ViewProductDetailsPriceWithPromotion";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test Test",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		Type(
			locator1 = "AppBuilder#SEARCH_BAR_INPUT",
			value1 = "Premium Brake Fluid");

		Button.clickSubmitButton();

		CommerceAcceleratorsInitializer.gotoMiniumProductDetailsPage(productName = "Premium Brake Fluid");

		AssertElementPresent(locator1 = "CommerceAccelerators#PRODUCT_DETAILS_LIST_PRICE_INACTIVE");

		AssertElementPresent(locator1 = "CommerceAccelerators#PRODUCT_DETAILS_LIST_PRICE_PROMO");
	}

	@description = "COMMERCE-6353. As a buyer, I want to be able to see product details in Product Details page(Product Availability, Number of Items in Stock, Product Name, Product SKU, Product MPN, Product Description, List Price, Product Specifications, Product Images/Attachments(if set))"
	@priority = "3"
	test ViewProductDetailsWidget {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CommerceProductDetails#ViewProductDetailsWidget";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/minium");

		Click(
			key_productName = "U-Joint",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_NAME");

		AssertElementPresent(locator1 = "CommerceFrontStore#FS_PRODUCT_STOCK_QUANTITY");

		AssertElementPresent(
			key_availability = "",
			locator1 = "CommerceFrontStore#FS_PRODUCT_AVAILABILITY");

		AssertElementPresent(locator1 = "CommerceFrontStore#FS_PRODUCT_NAME");

		AssertElementPresent(
			key_detail = "SKU",
			locator1 = "CommerceFrontStore#FS_PRODUCT_DETAIL");

		AssertElementPresent(
			key_detail = "MPN",
			locator1 = "CommerceFrontStore#FS_PRODUCT_DETAIL");

		AssertElementPresent(locator1 = "CommerceAccelerators#PRODUCT_DETAILS_LIST_PRICE");

		for (var detail : list "Weight,Dimensions,Material,Quantity,Warranty") {
			AssertElementPresent(
				key_specification = "${detail}",
				locator1 = "CommerceFrontStore#FS_PRODUCT_SPECIFICATIONS");
		}

		AssertElementPresent(
			key_FSProductImage = "",
			locator1 = "CommerceFrontStore#FS_PRODUCT_IMAGE");
	}

}